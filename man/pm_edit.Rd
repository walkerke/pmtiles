% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pm_edit.R
\name{pm_edit}
\alias{pm_edit}
\title{Edit PMTiles archive header or metadata}
\usage{
pm_edit(input, header_json = NULL, metadata = NULL, verbose = TRUE)
}
\arguments{
\item{input}{Path to PMTiles file to edit.}

\item{header_json}{Path to JSON file containing modified header data.
Use `pm_show(input, header_json = TRUE)` to get current header.}

\item{metadata}{Path to JSON file containing replacement metadata.
Use `pm_show(input, metadata = TRUE)` to get current metadata.}

\item{verbose}{Logical. If `TRUE`, prints progress information. Default is `TRUE`.}
}
\value{
Invisibly returns the path to the edited archive.
}
\description{
Modify parts of the PMTiles archive header or replace the JSON metadata.
Editing only the header modifies the file in-place, while editing metadata
creates a new copy.
}
\details{
# Editable Header Fields

The following header fields can be modified:
- `tile_type`: Type of tiles (e.g., "mvt", "png", "jpg")
- `tile_compression`: Compression format
- `minzoom`: Minimum zoom level
- `maxzoom`: Maximum zoom level
- `bounds`: Geographic bounds
- `center`: Center point and zoom

Other header fields are not editable.

# Important Notes

- Editing only the header modifies the file in-place
- Writing new metadata requires creating a new archive copy
- The new copy will replace the original file
}
\examples{
\dontrun{
# Get current header and metadata
header <- pm_show("archive.pmtiles", header_json = TRUE)
metadata <- pm_show("archive.pmtiles", metadata = TRUE)

# Modify and save to JSON files
jsonlite::write_json(header, "header.json", auto_unbox = TRUE)
jsonlite::write_json(metadata, "metadata.json", auto_unbox = TRUE)

# Edit the archive
pm_edit("archive.pmtiles",
        header_json = "header.json",
        metadata = "metadata.json")
}

}
